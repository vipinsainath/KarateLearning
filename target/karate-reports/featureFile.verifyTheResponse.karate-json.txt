{"failedCount":1,"prefixedPath":"classpath:featureFile\/verifyTheResponse.feature","packageQualifiedName":"featureFile.verifyTheResponse","loopIndex":-1,"relativePath":"featureFile\/verifyTheResponse.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":2836400,"startTime":1754060375746,"endTime":1754060375749,"millis":2.8364,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":0,"text":"url 'https:\/\/gorest.co.in'"},"stepLog":"20:29:35.660 karate.env system property was: null \n"},{"result":{"nanos":327608600,"startTime":1754060375755,"endTime":1754060376083,"millis":327.6086,"status":"passed"},"step":{"comments":["# To generate unique email id everytime, we can use randomUUID()"],"background":true,"line":10,"prefix":"*","index":1,"text":"def emailID = 'sainath' + java.util.UUID.randomUUID() + '@gmail.com'"}},{"result":{"nanos":91571100,"startTime":1754060376083,"endTime":1754060376175,"millis":91.5711,"status":"passed"},"step":{"endLine":20,"comments":["# Payload should be JSON type"],"background":true,"line":12,"prefix":"*","docString":"{\n  \"name\": \"sainath\",\n  \"email\": \"#(emailID)\",\n  \"gender\": \"male\",\n  \"status\": \"active\"\n}","index":2,"text":"def requestPayload ="}},{"result":{"nanos":1001200,"startTime":1754060376175,"endTime":1754060376176,"millis":1.0012,"status":"passed"},"step":{"line":28,"prefix":"Given","index":0,"text":"path '\/public\/v1\/users'"}},{"result":{"nanos":11845500,"startTime":1754060376176,"endTime":1754060376188,"millis":11.8455,"status":"passed"},"step":{"line":29,"prefix":"And","index":1,"text":"request requestPayload"}},{"result":{"nanos":2340500,"startTime":1754060376188,"endTime":1754060376190,"millis":2.3405,"status":"passed"},"step":{"line":30,"prefix":"And","index":2,"text":"header Authorization = 'Bearer ' + tokenID"}},{"result":{"nanos":4809633500,"startTime":1754060376190,"endTime":1754060381000,"millis":4809.6335,"status":"passed"},"step":{"line":31,"prefix":"When","index":3,"text":"method post"}},{"result":{"nanos":21900,"startTime":1754060381000,"endTime":1754060381000,"millis":0.0219,"status":"passed"},"step":{"line":32,"prefix":"Then","index":4,"text":"status 201"}},{"result":{"nanos":19707300,"startTime":1754060381000,"endTime":1754060381020,"millis":19.7073,"status":"passed"},"step":{"comments":["## Validate User ID exist or not - irrespective of value"],"line":34,"prefix":"And","index":5,"text":"match $.data.id == '#present'"}},{"result":{"nanos":1293000,"startTime":1754060381020,"endTime":1754060381021,"millis":1.293,"status":"passed"},"step":{"line":35,"prefix":"And","index":6,"text":"match $.data.name == 'sainath'"}}],"executorName":"main","line":27,"name":"Create a user and verify the User ID is created and data is present or not by $","description":"","durationMillis":5267.859,"startTime":1754060375202,"failed":false,"refId":"[1:27]","endTime":1754060381022,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":1172900,"startTime":1754060381051,"endTime":1754060381052,"millis":1.1729,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":0,"text":"url 'https:\/\/gorest.co.in'"},"stepLog":"20:29:41.045 karate.env system property was: null \n"},{"result":{"nanos":5044100,"startTime":1754060381052,"endTime":1754060381057,"millis":5.0441,"status":"passed"},"step":{"comments":["# To generate unique email id everytime, we can use randomUUID()"],"background":true,"line":10,"prefix":"*","index":1,"text":"def emailID = 'sainath' + java.util.UUID.randomUUID() + '@gmail.com'"}},{"result":{"nanos":2079100,"startTime":1754060381058,"endTime":1754060381060,"millis":2.0791,"status":"passed"},"step":{"endLine":20,"comments":["# Payload should be JSON type"],"background":true,"line":12,"prefix":"*","docString":"{\n  \"name\": \"sainath\",\n  \"email\": \"#(emailID)\",\n  \"gender\": \"male\",\n  \"status\": \"active\"\n}","index":2,"text":"def requestPayload ="}},{"result":{"nanos":925400,"startTime":1754060381060,"endTime":1754060381061,"millis":0.9254,"status":"passed"},"step":{"line":44,"prefix":"Given","index":0,"text":"path '\/public\/v1\/users'"}},{"result":{"nanos":543700,"startTime":1754060381061,"endTime":1754060381062,"millis":0.5437,"status":"passed"},"step":{"line":45,"prefix":"And","index":1,"text":"request requestPayload"}},{"result":{"nanos":1495200,"startTime":1754060381062,"endTime":1754060381063,"millis":1.4952,"status":"passed"},"step":{"line":46,"prefix":"And","index":2,"text":"header Authorization = 'Bearer ' + tokenID"}},{"result":{"nanos":244915400,"startTime":1754060381063,"endTime":1754060381308,"millis":244.9154,"status":"passed"},"step":{"line":47,"prefix":"When","index":3,"text":"method post"}},{"result":{"nanos":28800,"startTime":1754060381308,"endTime":1754060381308,"millis":0.0288,"status":"passed"},"step":{"line":48,"prefix":"Then","index":4,"text":"status 201"}},{"result":{"nanos":2508500,"errorMessage":"match failed: EQUALS\n\nclasspath:featureFile\/verifyTheResponse.feature:50","startTime":1754060381308,"endTime":1754060381311,"millis":2.5085,"status":"failed"},"step":{"comments":["## Validate address exist or not - irrespective of value"],"line":50,"prefix":"And","index":5,"text":"match $.data.address == '#present'"},"stepLog":"20:29:41.312 classpath:featureFile\/verifyTheResponse.feature:50\nAnd match $.data.address == '#present'\nmatch failed: EQUALS\n\nclasspath:featureFile\/verifyTheResponse.feature:50\n"}],"line":43,"description":"","durationMillis":258.7131,"failed":true,"error":"match failed: EQUALS\n\nclasspath:featureFile\/verifyTheResponse.feature:50","executorName":"main","name":"Create a user and verify the address is present or not by $.","startTime":1754060381039,"refId":"[2:43]","endTime":1754060381312,"exampleIndex":-1},{"sectionIndex":2,"stepResults":[{"result":{"nanos":602800,"startTime":1754060381358,"endTime":1754060381359,"millis":0.6028,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":0,"text":"url 'https:\/\/gorest.co.in'"},"stepLog":"20:29:41.354 karate.env system property was: null \n"},{"result":{"nanos":2513800,"startTime":1754060381359,"endTime":1754060381362,"millis":2.5138,"status":"passed"},"step":{"comments":["# To generate unique email id everytime, we can use randomUUID()"],"background":true,"line":10,"prefix":"*","index":1,"text":"def emailID = 'sainath' + java.util.UUID.randomUUID() + '@gmail.com'"}},{"result":{"nanos":845600,"startTime":1754060381361,"endTime":1754060381362,"millis":0.8456,"status":"passed"},"step":{"endLine":20,"comments":["# Payload should be JSON type"],"background":true,"line":12,"prefix":"*","docString":"{\n  \"name\": \"sainath\",\n  \"email\": \"#(emailID)\",\n  \"gender\": \"male\",\n  \"status\": \"active\"\n}","index":2,"text":"def requestPayload ="}},{"result":{"nanos":199700,"startTime":1754060381362,"endTime":1754060381362,"millis":0.1997,"status":"passed"},"step":{"line":56,"prefix":"Given","index":0,"text":"path '\/public\/v1\/users'"}},{"result":{"nanos":535300,"startTime":1754060381362,"endTime":1754060381363,"millis":0.5353,"status":"passed"},"step":{"line":57,"prefix":"And","index":1,"text":"request requestPayload"}},{"result":{"nanos":536000,"startTime":1754060381363,"endTime":1754060381364,"millis":0.536,"status":"passed"},"step":{"line":58,"prefix":"And","index":2,"text":"header Authorization = 'Bearer ' + tokenID"}},{"result":{"nanos":343637100,"startTime":1754060381364,"endTime":1754060381708,"millis":343.6371,"status":"passed"},"step":{"line":59,"prefix":"When","index":3,"text":"method post"}},{"result":{"nanos":12000,"startTime":1754060381708,"endTime":1754060381708,"millis":0.012,"status":"passed"},"step":{"line":60,"prefix":"Then","index":4,"text":"status 201"}},{"result":{"nanos":609600,"startTime":1754060381708,"endTime":1754060381709,"millis":0.6096,"status":"passed"},"step":{"comments":["## Get the Actual values from the response body"],"line":62,"prefix":"*","index":5,"text":"def resp = response"}},{"result":{"nanos":5396200,"startTime":1754060381708,"endTime":1754060381713,"millis":5.3962,"status":"passed"},"step":{"comments":["# return the user id created"],"line":64,"prefix":"*","index":6,"text":"def Actual_ID = resp.data.id"}},{"result":{"nanos":1493200,"startTime":1754060381713,"endTime":1754060381714,"millis":1.4932,"status":"passed"},"step":{"comments":["# return the mail id generated"],"line":66,"prefix":"*","index":7,"text":"def Actual_mail = resp.data.email"}},{"result":{"nanos":1371800,"startTime":1754060381716,"endTime":1754060381717,"millis":1.3718,"status":"passed"},"step":{"comments":["# get the status created"],"line":68,"prefix":"*","index":8,"text":"def Actual_status = resp.data.status"}},{"result":{"nanos":3121500,"startTime":1754060381717,"endTime":1754060381720,"millis":3.1215,"status":"passed"},"step":{"line":69,"prefix":"*","index":9,"text":"print 'USER ID: ', Actual_ID"},"stepLog":"20:29:41.719 [print] USER ID:  8044402 \n"},{"result":{"nanos":2000300,"startTime":1754060381720,"endTime":1754060381722,"millis":2.0003,"status":"passed"},"step":{"line":70,"prefix":"*","index":10,"text":"print 'Email ID: ', Actual_mail"},"stepLog":"20:29:41.722 [print] Email ID:  sainathc677e94d-f2b6-43c3-b6d1-a14618c18e3f@gmail.com \n"},{"result":{"nanos":1774600,"startTime":1754060381722,"endTime":1754060381724,"millis":1.7746,"status":"passed"},"step":{"comments":["## Get expected values from the payload (post request body)"],"line":73,"prefix":"*","index":11,"text":"def expected_email = requestPayload.email"}},{"result":{"nanos":1479700,"startTime":1754060381724,"endTime":1754060381725,"millis":1.4797,"status":"passed"},"step":{"line":74,"prefix":"*","index":12,"text":"def expected_status = requestPayload.status"}},{"result":{"nanos":1554700,"startTime":1754060381726,"endTime":1754060381728,"millis":1.5547,"status":"passed"},"step":{"comments":["## Validation"],"line":77,"prefix":"*","index":13,"text":"match Actual_ID == '#present'"}},{"result":{"nanos":1563600,"startTime":1754060381727,"endTime":1754060381729,"millis":1.5636,"status":"passed"},"step":{"line":78,"prefix":"*","index":14,"text":"match Actual_mail == expected_email"}},{"result":{"nanos":1112300,"startTime":1754060381729,"endTime":1754060381730,"millis":1.1123,"status":"passed"},"step":{"line":79,"prefix":"*","index":15,"text":"match Actual_status == expected_status"}}],"executorName":"main","line":55,"name":"Create a user and verify the User ID is created and data is present or not by response body.","description":"","durationMillis":370.3598,"startTime":1754060381351,"failed":false,"refId":"[3:55]","endTime":1754060381730,"exampleIndex":-1},{"sectionIndex":3,"stepResults":[{"result":{"nanos":444000,"startTime":1754060381747,"endTime":1754060381747,"millis":0.444,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":0,"text":"url 'https:\/\/gorest.co.in'"},"stepLog":"20:29:41.744 karate.env system property was: null \n"},{"result":{"nanos":4270600,"startTime":1754060381747,"endTime":1754060381751,"millis":4.2706,"status":"passed"},"step":{"comments":["# To generate unique email id everytime, we can use randomUUID()"],"background":true,"line":10,"prefix":"*","index":1,"text":"def emailID = 'sainath' + java.util.UUID.randomUUID() + '@gmail.com'"}},{"result":{"nanos":977800,"startTime":1754060381752,"endTime":1754060381753,"millis":0.9778,"status":"passed"},"step":{"endLine":20,"comments":["# Payload should be JSON type"],"background":true,"line":12,"prefix":"*","docString":"{\n  \"name\": \"sainath\",\n  \"email\": \"#(emailID)\",\n  \"gender\": \"male\",\n  \"status\": \"active\"\n}","index":2,"text":"def requestPayload ="}},{"result":{"nanos":152800,"startTime":1754060381753,"endTime":1754060381753,"millis":0.1528,"status":"passed"},"step":{"line":84,"prefix":"Given","index":0,"text":"path '\/public\/v1\/users'"}},{"result":{"nanos":223400,"startTime":1754060381753,"endTime":1754060381753,"millis":0.2234,"status":"passed"},"step":{"line":85,"prefix":"And","index":1,"text":"request requestPayload"}},{"result":{"nanos":344700,"startTime":1754060381753,"endTime":1754060381753,"millis":0.3447,"status":"passed"},"step":{"line":86,"prefix":"And","index":2,"text":"header Authorization = 'Bearer ' + tokenID"}},{"result":{"nanos":345883700,"startTime":1754060381754,"endTime":1754060382100,"millis":345.8837,"status":"passed"},"step":{"line":87,"prefix":"When","index":3,"text":"method post"}},{"result":{"nanos":13000,"startTime":1754060382100,"endTime":1754060382100,"millis":0.013,"status":"passed"},"step":{"line":88,"prefix":"Then","index":4,"text":"status 201"}},{"result":{"nanos":510500,"startTime":1754060382100,"endTime":1754060382101,"millis":0.5105,"status":"passed"},"step":{"comments":["##Returning User ID and email id from the response"],"line":91,"prefix":"*","index":5,"text":"def postResponseJson = response"}},{"result":{"nanos":1400900,"startTime":1754060382100,"endTime":1754060382101,"millis":1.4009,"status":"passed"},"step":{"line":92,"prefix":"*","index":6,"text":"def post_ID = postResponseJson.data.id"}},{"result":{"nanos":1145900,"startTime":1754060382102,"endTime":1754060382103,"millis":1.1459,"status":"passed"},"step":{"line":93,"prefix":"*","index":7,"text":"def post_mail = postResponseJson.data.email"}},{"result":{"nanos":4405700,"startTime":1754060382103,"endTime":1754060382107,"millis":4.4057,"status":"passed"},"step":{"comments":["# Validate the user id and get the email from the response and compare with expected value"],"line":96,"prefix":"Given","index":8,"text":"path '\/public\/v1\/users\/' + post_ID"}},{"result":{"nanos":520400,"startTime":1754060382108,"endTime":1754060382109,"millis":0.5204,"status":"passed"},"step":{"line":97,"prefix":"And","index":9,"text":"header Authorization = 'Bearer ' + tokenID"}},{"result":{"nanos":372864800,"startTime":1754060382109,"endTime":1754060382482,"millis":372.8648,"status":"passed"},"step":{"line":98,"prefix":"When","index":10,"text":"method GET"}},{"result":{"nanos":12200,"startTime":1754060382481,"endTime":1754060382481,"millis":0.0122,"status":"passed"},"step":{"line":99,"prefix":"Then","index":11,"text":"status 200"}},{"result":{"nanos":392500,"startTime":1754060382481,"endTime":1754060382481,"millis":0.3925,"status":"passed"},"step":{"comments":["## Get the User id and email from the GET Response"],"line":101,"prefix":"*","index":12,"text":"def getResponseJson = response"}},{"result":{"nanos":1593300,"startTime":1754060382482,"endTime":1754060382484,"millis":1.5933,"status":"passed"},"step":{"line":102,"prefix":"*","index":13,"text":"def get_ID = getResponseJson.data.id"}},{"result":{"nanos":1854000,"startTime":1754060382483,"endTime":1754060382485,"millis":1.854,"status":"passed"},"step":{"line":103,"prefix":"*","index":14,"text":"def get_mail = getResponseJson.data.email"}},{"result":{"nanos":746800,"startTime":1754060382485,"endTime":1754060382486,"millis":0.7468,"status":"passed"},"step":{"comments":["## verify with get response with post response"],"line":106,"prefix":"*","index":15,"text":"match post_ID == get_ID"}},{"result":{"nanos":570900,"startTime":1754060382486,"endTime":1754060382487,"millis":0.5709,"status":"passed"},"step":{"line":107,"prefix":"*","index":16,"text":"match post_mail == get_mail"}}],"executorName":"main","line":83,"name":"Create a user with the given data and validate by Response by GET Api","description":"","durationMillis":738.3279,"startTime":1754060381743,"failed":false,"refId":"[4:83]","endTime":1754060382486,"exampleIndex":-1}],"callDepth":0,"name":"Verify the reponse in muliple ways","description":"","resultDate":"2025-08-01 08:29:42 pm","durationMillis":6635.2598,"passedCount":3}